Continuação da lição anterior
Validação de JSON: https://jsonlint.com/

Além de "must", é possível pesquisar com "must_not" e "should". O interessante do "should" é que, sozinho, ele só influencia no score dos resultados.
Na pesquisa abaixo, dois documentos são encontrados e o mais relevante é o que tem o ID = 1.
GET courses/_search
{
  "query": {
    
    "bool": {
      "must": [
        {"match" : {"name": "accounting"}},
        {"match": {"room": "e3"}}
      ]
    }
  }
}

Se incluir a condição "should" com a palavra "systems" que está presente somente no documento com ID = 8, esse passa a ser o mais relevante.
GET courses/_search
{
  "query": {
    
    "bool": {
      "must": [
        {"match": {"name": "accounting"}},
        {"match": {"room": "e3"}}
      ],
      "should": [
        {"match": {"name": "systems"}}
      ]
    }
  }
}

É possível determinar múltiplas condições com "should" e especificar a quantidade mínima que deve ser encontrada nos documentos que serão retornados.
No exemplo abaixo, há uma condição "should", que não é atendida, e foi definido que pelo menos uma condição "should" deveria ser atendida. Assim, nenhum documento é retornado.
GET courses/_search
{
  "query": {
    "bool": {
      "must": [
        {"match": {"name": "accounting"}},
        {"match": {"room": "e3"}}
      ],
      "must_not": [
        {"match": {"professor.name": "bill"}}
      ],
      "should": [
        {"match": {"name": "computer"}}
      ],
      "minimum_should_match": 1
    }
  }
}

É possível pesquisar um termo em múltiplos campos.
GET courses/_search
{
  "query": {
    "multi_match": {
      "query": "accounting",
      "fields": ["name", "professor.department"]
    }
  }
}

É possível pesquisar um frase em um determinado campo. Não é necessário ter a frase completa
Com "match_phrase", as palavras (tokens) devem estar completas (da mesma forma como foram indexadas)
O exemplo abaixo, retorna um documento
GET courses/_search
{
  "query": {
    "match_phrase": {
      "course_description": "Sys 350 is an advanced course providing"
    }
  }
}

Removendo o "g" do token "providing", a busca não retorna nenhum documento.
GET courses/_search
{
  "query": {
    "match_phrase": {
      "course_description": "Sys 350 is an advanced course providin"
    }
  }
}

Para pesquisar por partes de um token (somente o último termo), é necessário utilizar "match_phrase_prefix". A busca abaixo, agora retorna um documento. 
Era muito utilizado para autocomplete, mas há mecanismos melhores atualmente. Ver: 
https://www.elastic.co/guide/en/elasticsearch/reference/current/search-suggesters-completion.html
https://www.elastic.co/guide/en/elasticsearch/guide/master/_index_time_search_as_you_type.html

GET courses/_search
{
  "query": {
    "match_phrase_prefix": {
      "course_description": "Sys 350 is an advanced course providin"
    }
  }
}

Range queries
GET courses/_search
{
  "query": {
    "range": {
      "students_enrolled": {
        "gte": 10,
        "lte": 20
      }
    }
  }
}

Mesclando possibilidades para executar uma pesquisa mais complexa
GET courses/_search
{
  "query": {
    "bool": {
      "must": [
        {"match": {"name": "accounting"}}
      ],
      "must_not": [
        {"match": {"room": "e7"}}
      ],
      "should": [
        {"range": {
          "students_enrolled": {
            "gte": 10,
            "lte": 20
            }
          }
        }
      ]
    }
  }
}